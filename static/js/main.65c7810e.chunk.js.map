{"version":3,"sources":["components/CustomCounter/CounterCust/styles.module.css","components/Counter/Counter.module.css","components/App/App.module.css","components/CountBtn/styles.module.css","components/CustomCounter/styles.module.css","components/CountBtn/index.js","components/Counter/index.js","components/CustomCounter/CounterCust/index.js","components/CustomCounter/index.js","components/App/App.js","index.js"],"names":["module","exports","CountBtn","updateCount","counter","value","className","s","btn","onClick","id","send","Counter","deleteCounter","reset","count","CounterCust","positiveRange","negativeRange","minRange","maxRange","onChangeMinRange","onChangeMaxRange","onButtonClick","resultNumb","onReset","customCounter","title","ranges","input","type","name","min","onChange","max","map","el","key","CustomCounter","custom","useState","setResultNumber","setValue","setMinRange","setMaxRange","setNegativeRange","setPositiveRange","createPositiveRange","from","to","range","i","push","createNegativeRange","style","clx","e","target","App","initialState","uuid","counterList","setCounterList","setCustom","n","newList","itemIndex","findIndex","slice","wrap","addCounter","rand","Math","random","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65c7810e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"customCounter\":\"styles_customCounter__3RqFg\",\"title\":\"styles_title__1VfJJ\",\"ranges\":\"styles_ranges__GS6f-\",\"input\":\"styles_input__4yfgZ\",\"counter\":\"styles_counter__1la5Z\",\"range\":\"styles_range__2Z1T1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2d6O8\",\"count\":\"Counter_count__1SqBb\",\"btn\":\"Counter_btn__36Eun\",\"reset\":\"Counter_reset__WDrAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__1qZn7\",\"countBtn\":\"App_countBtn__1-KYf\",\"addCounter\":\"App_addCounter__1JTTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__3lJA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom\":\"styles_custom__3h-rc\",\"customCounter\":\"styles_customCounter__HKJwY\"};","import React from 'react';\n\nimport s from './styles.module.css';\n\n\nexport const CountBtn = ({updateCount,counter, value}) => {\n\n    const send = (value, id) => updateCount(value, id);\n\n\n    return (\n        <div className={s.btn}>\n            <button className={s.btn} onClick={()=>send(value, counter.id)} >{value}</button>\n        </div>\n    );\n};\n","import React from 'react';\nimport {CountBtn} from \"../CountBtn\";\n\nimport s from './Counter.module.css';\n\n\nexport const Counter = ({deleteCounter, reset, counter, updateCount}) => {\n\n    return (\n        <div className={s.counter}>\n            <CountBtn value={-3} counter={counter} updateCount={updateCount} />\n            <CountBtn value={-2} counter={counter} updateCount={updateCount}/>\n            <CountBtn value={-1} counter={counter} updateCount={updateCount}/>\n            <div className={s.count}>{counter.count}</div>\n            <CountBtn value={1} counter={counter} updateCount={updateCount}/>\n            <CountBtn value={2} counter={counter} updateCount={updateCount}/>\n            <CountBtn value={3} counter={counter} updateCount={updateCount}/>\n            <button className={s.reset} onClick={()=>reset(counter.id)}>RESET</button>\n            <button className={s.reset} onClick={()=>deleteCounter(counter.id)}>DELETE</button>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport s from './styles.module.css';\n\nexport const  CounterCust = ({\n    positiveRange,\n        negativeRange,\n        minRange, maxRange,\n        onChangeMinRange, onChangeMaxRange,\n        onButtonClick,\n        resultNumb,\n        onReset\n    }) => {\n\n    return (\n        <div className={s.customCounter}>\n            <h1 className={s.title}> ENTER YOUR RANGE FROM 1 TO 10</h1>\n            <div className={s.ranges}>\n                <div>\n                    <input\n                        className={s.input}\n                        type='text'\n                        name='min'\n                        value={minRange.min}\n                        onChange={onChangeMinRange}\n                    />\n                    <input\n                        className={s.input}\n                        type=\"text\"\n                        name='max'\n                        value={maxRange.max}\n                        onChange={onChangeMaxRange}/>\n                </div>\n                <div className={s.counter}>\n                    <div>\n                        {negativeRange.map(el =>\n                            <button key={-el}\n                                    onClick={() => onButtonClick(-el)}\n\n                            >\n                            {-el}\n                        </button>)}\n                    </div>\n                    <span>{resultNumb}</span>\n                    <div>\n                        {positiveRange.map(el =>\n                            <button key={el}\n                                    onClick={() => onButtonClick(el)}\n                            >\n                            +{el}\n                        </button>)}\n                    </div>\n                </div>\n            </div>\n            <button onClick={() => onReset()}> RESET</button>\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport {CounterCust} from \"./CounterCust\";\nimport clx from 'classnames';\n\nimport s from './styles.module.css';\n\nexport const CustomCounter = ({custom}) => {\n            const [resultNumb, setResultNumber] = useState(10);\n            const [value, setValue] = useState('');\n            const [minRange, setMinRange] = useState(0);\n            const [maxRange, setMaxRange] = useState(0);\n            const [negativeRange, setNegativeRange] = useState([]);\n            const [positiveRange, setPositiveRange] = useState([]);\n\n            const onButtonClick = (value) => {\n            setResultNumber(resultNumb + +value);\n        };\n\n            const createPositiveRange =  (from, to) => {\n            const range = [];\n            for(let i = from; i <= to ; i++ ){\n                if ( from >=0 && to <=10) {\n                    range.push(i);\n                }else{\n                    range.push();\n                }\n        }\n            return range;\n        };\n\n            const createNegativeRange =  (from, to) => {\n            const range = [];\n            for(let i = to; i >= from; i-- ){\n                if ( from >=0 && to <=10) {\n                    range.push(i);\n                }else {\n                    range.push();\n                }\n\n        }\n            return range;\n        };\n\n            const onChangeMinRange = (e) => {\n            const from = +e.target.value;\n            (from >= 0 && from < 10) ? setMinRange(from) : setMinRange(0);\n            setNegativeRange(createNegativeRange(from, maxRange));\n            setPositiveRange(createPositiveRange(from, maxRange));\n\n        };\n\n            const onChangeMaxRange = (e) => {\n            const to =  +e.target.value;\n            (to > 0 && to <= 10) ? setMaxRange(to) : setMaxRange(10);\n            setNegativeRange(createNegativeRange(minRange, to));\n            setPositiveRange(createPositiveRange(minRange, to));\n        };\n\n            const onReset = () => {\n            setMinRange({'min': ''});\n            setMaxRange({'max': ''});\n            setResultNumber(0);\n            setValue(value + '');\n            setNegativeRange([]);\n            setPositiveRange([]);\n        };\n\n            const style = clx({[s.custom]: !custom,});\n\n            return (\n            <main className={style}>\n                <div className={s.customCounter}>\n                    <CounterCust positiveRange={positiveRange}\n                             negativeRange={negativeRange}\n                             onButtonClick={onButtonClick}\n                             onChangeMinRange={onChangeMinRange}\n                             onChangeMaxRange={onChangeMaxRange}\n                             onReset={onReset}\n                             minRange={minRange}\n                             maxRange={maxRange}\n                             resultNumb={resultNumb}\n                    />\n                </div>\n\n            </main>\n            );\n};\n\n","import React, {useState} from 'react';\nimport {Counter} from \"../Counter\";\nimport { v4 as uuid } from 'uuid';\nimport {CustomCounter} from \"../CustomCounter\";\n\nimport s from './App.module.css';\n\n\nexport function App() {\n\n    const initialState = [{id: uuid(), count: 1},{id: uuid(), count: 2}];\n\n    const [counterList, setCounterList] = useState(initialState);\n    const [custom, setCustom]= useState(false);\n\n    const updateCount = (n, id) => {\n        const newList = counterList.map((el) => {\n            if (id === el.id ){\n                return {...el,  count: el.count + n }\n             }\n            return el;\n        })\n        setCounterList(newList);\n    };\n    const addCounter = () => {\n        const rand = +((Math.random()*10).toFixed());\n        const newList = [...counterList, {id:uuid(), count:rand}];\n        setCounterList(newList);\n    };\n    const deleteCounter = (id) => {\n        const itemIndex = counterList.findIndex((el) => el.id === id);\n\n        const newList = [\n            ...counterList.slice(0, itemIndex),\n            ...counterList.slice(itemIndex + 1)\n        ];\n        setCounterList(newList);\n    };\n    const reset = (id) => {\n        const itemIndex = counterList.findIndex((el) => el.id === id);\n        const newList = [\n            ...counterList.slice(0, itemIndex), {id, count: 0},\n            ...counterList.slice(itemIndex + 1)\n        ];\n        setCounterList(newList);\n    }\n    const resetAll = () =>{\n        const newList = [...counterList];\n        newList.map(el => (el.count =0));\n        setCounterList(newList);\n    };\n    const addCustomCounter = () => {setCustom(!custom)}\n\n    return (\n        <div className={s.wrap}>\n            {counterList.map((el)=>(\n                <Counter\n                    key={el.id}\n                    counter={el}\n                    deleteCounter={deleteCounter}\n                    reset={reset}\n                    updateCount={updateCount}\n                />\n            ))}\n            <button className={s.addCounter} onClick={addCounter}>ADD COUNTER</button>\n            <button className={s.addCounter} onClick={resetAll}>RESET ALL</button>\n            <button className={s.addCounter} onClick={addCustomCounter}>ADD CUSTOM COUNTER</button>\n            <CustomCounter custom={custom}/>\n        </div>\n\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}